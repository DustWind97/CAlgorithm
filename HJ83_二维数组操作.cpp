#include <iostream>
#include <string>
#include <bits/stdc++.h>

using namespace std;

/*
本题思路：
    本题本质上就是二维数组的初始化以及查询合法性判断
*/

int main()
{
    int m, n; //数据表的行与列
    while (cin >> m >> n)
    {
        /*****************************************************************/
        //对数据表进行初始化
        if (m > 9 || n > 9)
        {
            cout << -1 << endl; //初始化失败
        }
        else
        {
            cout << 0 << endl; //初始化成功
        }

        /*****************************************************************/
        //输入坐标（x1，y1）和（x2，y2）两个坐标
        int x1, y1, x2, y2;
        cin >> x1 >> y1 >> x2 >> y2;
        if (x1 >= m || y1 >= n || x2 >= m || y2 >= n) //如果行坐标的值大于等于数据表的行数；或者列坐标的值大于等于数据表的列数，那么返回-1，否则返回0
        {
            cout << -1 << endl;
        }
        else
        {
            cout << 0 << endl;
        }

        /*****************************************************************/
        //输入row，在第row行上方添加一行
        int row;                           // row为行号
        cin >> row;                        // 输入行号
        if (row < 0 || row >= m || m == 9) // 如果行号大于数据表的行数，或者数据表的行数为9，则返回-1，否则返回0
        {
            cout << -1 << endl;
        }
        else
        {
            cout << 0 << endl;
        }

        /*****************************************************************/
        //输入column，在第column列左边添加一列
        int column;                              // column为列号
        cin >> column;                           // 输入列号
        if (column < 0 || column >= n || n == 9) // 如果列号大于数据表的列数，或者数据表的列数为9，则返回-1，否则返回0
        {
            cout << -1 << endl;
        }
        else
        {
            cout << 0 << endl;
        }

        /*****************************************************************/
        //输入x、y ，查找坐标为(x,y) 的单元格的值
        int x, y;                               //(x,y)为坐标
        cin >> x >> y;                          //输入x和y的值
        if (x < 0 || x >= m || y < 0 || y >= n) //如果行坐标的值大于等于数据表的行数；或者列坐标的值大于等于数据表的列数，那么返回-1，否则返回0
        {
            cout << -1 << endl;
        }
        else
        {
            cout << 0 << endl;
        }
    }

    return 0;
}